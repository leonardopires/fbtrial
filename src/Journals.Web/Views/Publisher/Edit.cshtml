@using Microsoft.AspNetCore.Mvc.ModelBinding
@model Journals.Model.JournalUpdateViewModel

@{
    ViewBag.Title = "Update Journal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Journal</h2>

<div class="container">

    @using (Html.BeginForm("Edit", "Publisher", null, FormMethod.Post, false, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            @if (ViewData.ModelState.ValidationState == ModelValidationState.Invalid)
            {
                <div class="alert alert-danger">
                    @Html.ValidationSummary(false, "There were errors.", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.UserId)
                </div>
            }
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control col-md-10", style = "height:300px;w" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="nav navbar navbar-default">
                <div class="container-fluid">
                    <div class="navbar-header">
                        <a class="btn btn-info navbar-btn" href="@Url.Action("Issue", new {journalId = Model.Id})">Add Issue</a>
                        <span class="navbar-brand">
                            Issues
                        </span>
                    </div>
                </div>
            </div>
        </div>

        if (Model.Issues.Any())
        {
            <div class="row">
                <table class="table table-striped col-xs-12">
                    <thead>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Date</th>
                    </thead>
                    <tbody>
                        @foreach (var issue in Model.Issues)
                    {
                            <tr>
                                <td>@issue.Title</td>
                                <td>@issue.Description</td>
                                <td>@issue.PublishedDate</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="row">
                <div class="alert alert-info">
                    <h4>No issues found for this Journal.</h4>
                </div>
            </div>
        }
        <div class="row">
            <div class="form-group">
                <div class="pull-right">
                    <input type="submit" value="Save" class="btn btn-primary" /> @Html.ActionLink("Back to List", "Index", "Publisher", htmlAttributes: new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    }
</div>